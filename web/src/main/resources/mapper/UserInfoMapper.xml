<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.springboot.entity.UserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="userID" jdbcType="INTEGER" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="passWord" jdbcType="VARCHAR" property="password" />
    <result column="regDate" jdbcType="TIMESTAMP" property="regdate" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="phoneNum" jdbcType="INTEGER" property="phonenum" />
    <result column="eMail" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userID, userName, passWord, regDate, nickName, phoneNum, eMail
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userInfo
    where id = #{id,jdbcType=INTEGER}
      and userID = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from userInfo
    where id = #{id,jdbcType=INTEGER}
      and userID = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.entity.UserInfo">
    insert into userInfo (id, userID, userName, 
      passWord, regDate, nickName, 
      phoneNum, eMail)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{regdate,jdbcType=TIMESTAMP}, #{nickname,jdbcType=VARCHAR}, 
      #{phonenum,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.entity.UserInfo">
    insert into userInfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userID,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        passWord,
      </if>
      <if test="regdate != null">
        regDate,
      </if>
      <if test="nickname != null">
        nickName,
      </if>
      <if test="phonenum != null">
        phoneNum,
      </if>
      <if test="email != null">
        eMail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="regdate != null">
        #{regdate,jdbcType=TIMESTAMP},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.entity.UserInfo">
    update userInfo
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="regdate != null">
        regDate = #{regdate,jdbcType=TIMESTAMP},
      </if>
      <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        phoneNum = #{phonenum,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        eMail = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and userID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.entity.UserInfo">
    update userInfo
    set userName = #{username,jdbcType=VARCHAR},
      passWord = #{password,jdbcType=VARCHAR},
      regDate = #{regdate,jdbcType=TIMESTAMP},
      nickName = #{nickname,jdbcType=VARCHAR},
      phoneNum = #{phonenum,jdbcType=INTEGER},
      eMail = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and userID = #{userid,jdbcType=INTEGER}
  </update>
</mapper>